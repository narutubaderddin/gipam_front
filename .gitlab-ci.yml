variables:
  GIT_STRATEGY: none

stages:
  - deploy
  - packaging

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - npm install

Deploy INTERN:
  stage: deploy
  script:
    - cd /var/www/html/staging/gipam-frontend/
    - bash gitlab-ci-update.sh develop dev "/gipam-frontend-intern/" --prod --buildOptimizer=true
  only:
    - develop
  tags:
    - GIPAM-Frontend

Deploy RECETTE:
  stage: deploy
  script:
    - cd /var/www/html/gipam-frontend/
    - bash gitlab-ci-update.sh develop dev "/gipam-frontend/" --prod --buildOptimizer=true
  only:
    - recette
  tags:
    - GIPAM-Frontend

Build Delivrable Package:
  artifacts:
    when: on_success
    paths:
      - 'build/'
    name: 'GIPAM-Frontend-build-$CI_COMMIT_TAG-$CI_JOB_ID'
  before_script:
    - npm install
    - export CI_PACKAGING_DATETIME=$(date +'%Y-%m-%d_%H%M%S')
  variables:
    GIT_STRATEGY: clone
  stage: packaging
  script:
    - cp src/environments/.env.ts.prod src/environments/.env.ts
    - ./node_modules/.bin/ng build --prod --aot --output-hashing all --named-chunks false --build-optimizer --vendor-chunk --base-href="/"
    - mkdir GIPAM-Frontend
    - mkdir build
    - cp -R dist Gipam-Frontend
    - cp deploy.sh Gipam-Frontend/deploy.sh
    - tar -czvf "GIPAM-Frontend-${CI_COMMIT_TAG}-${CI_PACKAGING_DATETIME}.tar.gz" Gipam-Frontend/
    - mv "GIPAM-Frontend-${CI_COMMIT_TAG}-${CI_PACKAGING_DATETIME}.tar.gz" build/
  only:
    - tags
  tags:
    - GIPAM-Frontend
